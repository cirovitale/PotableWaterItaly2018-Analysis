iqr <- substr(iqr,1,9)
iqr
ggplot(data = finale, mapping = aes(x=ACQ_EROG))+geom_boxplot()+
labs(title = 'Box Plot', x = 'Acqua erogata dai comuni')
#intervallo per k=1
int1_x<-mean-sd
int1_y<-mean+sd
int1_x
int1_y
#intervallo per k=2
int2_x<-mean-(2*sd)
int2_y<-mean+(2*sd)
int2_x
int2_y
#intervallo per k=3
int3_x<-mean-(3*sd)
int3_y<-mean+(3*sd)
int3_x
int3_y
#diagramma a dispersione, con x_i=ACQ_EROG e y_i = ACQ_IMM
ggplot(data = finale, mapping = aes(x=ACQ_IMM,y=ACQ_EROG))+geom_point()+
labs(title = 'Scatter Plot', y = 'Acqua erogata dai comuni', x = 'Acqua immessa nei comuni')
#coefficiente di correlazione campionario
r<-cor(finale$ACQ_EROG,finale$ACQ_IMM)
r
#diagramma a dispersione, con x_i=ACQ_IMM e y_i = ACQ_EROG
ggplot(data = finale, mapping = aes(x=ACQ_IMM,y=ACQ_EROG))+geom_point()+
labs(title = 'Scatter Plot', y = 'Acqua erogata dai comuni', x = 'Acqua immessa nei comuni')
#coefficiente di correlazione campionario
r<-cor(finale$ACQ_EROG,finale$ACQ_IMM)
r
#grafico a torta per classi
pie(freq_ass_class,
main = 'Pie plot',
legend(topright,legend = 'molto','poco'))
#grafico a torta per classi
pie(freq_ass_class,
main = 'Pie plot',
legend(1.0,0.7,legend = 'molto','poco'))
#grafico a torta per classi
pie(freq_ass_class,
main = 'Pie plot',
)
#grafico a torta per classi
pie(freq_ass_class,
main = 'Pie plot',
)
legend('bottom', legend = 1:12)
legend('bottom', legend = c('1','2','3'))
#grafico a torta per classi
pie(freq_ass_class,
main = 'Pie plot',
)
legend('bottom', legend = c('1','2','3'))
#grafico a torta per classi
pie(freq_ass_class,
main = 'Pie plot',
)
legend('bottom', legend = c('1','2','3'), col = c('yellow', 'green', 'white'))
#grafico a linee per classi
plot(freq_ass_class,
main = "Polygon plot",
type = "b",
xlab = "Acqua erogata dai comuni divisa in classi",
ylab = "Frequenze assolute delle classi")
legend('bottom', legend = c('1','2','3'), col = c('yellow', 'green', 'white'))
#grafico a torta per classi
pie(freq_ass_class,
main = 'Pie plot',
legend('bottom', legend = c('1','2','3'), col = c('yellow', 'green', 'white'))
)
#grafico a torta per classi
pie(freq_ass_class,
main = 'Pie plot',
)
#grafico a torta per classi
pie(freq_ass_class,
main = 'Pie plot',
)
#grafico a torta per classi
pie(freq_ass_class,
main = 'Pie plot',legend=c('tre'))
#grafico a torta per classi
pie(freq_ass_class,
main = 'Pie plot')
#grafico a torta per classi
pie(freq_ass_class,
main = 'Pie plot',legend(fill = col))
#grafico a torta per classi
pie(freq_ass_class,
main = 'Pie plot',legend(fill = NULL))
#grafico a torta per classi
pie(freq_ass_class,
main = 'Pie plot',legend(x,y=NULL,fill = NULL))
#grafico a torta per classi
pie(freq_ass_class,
main = 'Pie plot',legend(x,y=NULL,fill = NULL,col = par('col')))
#grafico a torta per classi
pie(freq_ass_class,
main = 'Pie plot',legend(x,y=NULL,legend,fill = NULL))
#grafico a torta per classi
pie(freq_ass_class,
main = 'Pie plot',legend(y=NULL,legend,fill = NULL))
#grafico a torta per classi
pie(freq_ass_class,
main = 'Pie plot',legend(x,y,legend,fill = NULL))
#grafico a torta per classi
pie(freq_ass_class,
main = 'Pie plot',legend(x=NULL,y=NULL,legend,fill = NULL))
z<- c('[92,1415]', '[1415,2738]', '[2738,4060]', '[4060,5383]', '[5383,6706]', '[6706,8028]', '[8028,8351]', '[8351,10675]')
#tabella divisa in classi
tab_classi <- cut(finale$ACQ_EROG, breaks = x,right = FALSE,labels = z)
tab_classi
#grafico a torta per classi
pie(freq_ass_class,
main = 'Pie plot',
legend('bottom', legend = z))
legend('bottom', legend = z)
#tabella divisa in classi
tab_classi <- cut(finale$ACQ_EROG, breaks = x,right = FALSE,labels = z)
tab_classi
#grafico a torta per classi
pie(freq_ass_class,
main = 'Pie plot',
col = rainbow(length(freq_ass_class))
)
legend('topright', eti, cex = 0.8, legend = z, fill = rainbow(length(freq_ass_class)))
legend('topright',legend = z, eti, cex = 0.8, fill = rainbow(length(freq_ass_class)))
legend('topright', eti, cex = 0.8, fill = rainbow(length(freq_ass_class)))
legend('topright', cex = 0.8, fill = rainbow(length(freq_ass_class)))
legend('topright', cex = 0.8, fill = rainbow(length(freq_ass_class)), z)
plot.new()
legend('topright', cex = 0.8, fill = rainbow(length(freq_ass_class)), z)
#grafico a torta per classi
plot.new()
pie(freq_ass_class,
main = 'Pie plot',
col = rainbow(length(freq_ass_class))
)
legend('topright', cex = 0.8, fill = rainbow(length(freq_ass_class)), z)
#grafico a torta per classi
plot.new()
pie(freq_ass_class,
main = 'Pie plot',
col = rainbow(length(freq_ass_class))
)
legend('topright', cex = 0.8, fill = rainbow(length(freq_ass_class)),legend =  'napoli')
#grafico a torta per classi
pie(freq_ass_class,
main = 'Pie plot',
col = rainbow(length(freq_ass_class))
)
pie(valoriG, labels = labelG, main="Grafico a torta Continenti")
valoriG <- c(25, 22, 40, 32, 12)
labelG <- c("Europa", "America", "Africa", "Asia", "Altri")
pie(valoriG, labels = labelG, main="Grafico a torta Continenti")
#grafico a torta per classi
pie(freq_ass_class,
main = 'Pie plot')
#grafico a torta per classi
pie(freq_ass_class,
main = 'Pie plot')
#grafico a torta per classi
pie(freq_ass_class,
main = 'Pie plot')
legend(0.7,1.0,legend = z, fill = rainbow(length(freq_ass_class)))
z<-c('[92,1415]', '[1415,2738]', '[2738,4060]', '[4060,5383]', '[5383,6706]', '[6706,8028]', '[8028,8351]', '[8351,10675]')
#grafico a torta per classi
pie(freq_ass_class,
main = 'Pie plot')
legend(0.7,1.0,legend = z, fill = rainbow(length(freq_ass_class)))
legend(0.7,1.0, cex = 0.8, legend = z, fill = rainbow(length(freq_ass_class)))
legend('topright', cex = 0.8, legend = z, fill = rainbow(length(freq_ass_class)))
legend('topright', cex = 0.8, legend = z, fill = rainbow(length(freq_ass_class)), units(1))
#grafico a torta per classi
pie(freq_ass_class,
main = 'Pie plot',
col = rainbow(length(freq_ass_class)))
z<-c("1","2", "3", "4", "5", "6", "7", "8")
legend('topright', cex = 0.8, legend = z, fill = rainbow(length(freq_ass_class)))
z<-c("1","2", "3", "4", "5", "6", "7", "8")
legend('topright', cex = 0.8, legend = z, fill = rainbow(length(freq_ass_class)))
#grafico a torta per classi
pie(freq_ass_class,
main = 'Pie plot',
col = rainbow(length(freq_ass_class)))
legend('topright', cex = 0.8, legend = z, fill = rainbow(length(freq_ass_class)))
#grafico a torta per classi
pie(freq_ass_class,
main = 'Pie plot',
col = rainbow(length(freq_ass_class)),
legend = z)
#grafico a torta per classi
pie(freq_ass_class,
main = 'Pie plot',
col = rainbow(length(freq_ass_class)),
legend = levels(freq_ass_class))
legend('topright', cex = 0.8, legend = z, fill = rainbow(length(freq_ass_class)))
legend('topright', cex = 0.8, legend = levels(freq_ass_class), fill = rainbow(length(freq_ass_class)))
#grafico a torta per classi
pie(freq_ass_class,
main = 'Pie plot',
col = rainbow(length(freq_ass_class)),
legend = levels(finale$ACQ_EROG))
legend('topright', cex = 0.8, legend = levels(finale$ACQ_EROG), fill = rainbow(length(freq_ass_class)))
pie(freq_ass_class,
main = 'Pie plot',
col = rainbow(length(freq_ass_class)))
legend('topright', cex = 0.8, legend = z, fill = rainbow(length(freq_ass_class)))
z<-c('[92,1415]', '[1415,2738]', '[2738,4060]', '[4060,5383]', '[5383,6706]', '[6706,8028]', '[8028,8351]', '[8351,10675]')
pie(freq_ass_class,
main = 'Pie plot',
col = rainbow(length(freq_ass_class)))
legend('topright', cex = 0.8, legend = z, fill = rainbow(length(freq_ass_class)))
pie(freq_ass_class,
main = 'Pie plot',
col = rainbow(length(freq_ass_class)),
labels = "")
legend('topright', cex = 0.8, legend = z, fill = rainbow(length(freq_ass_class)))
install.packages("plotrix")
install.packages("plotrix")
library(plotrix)
pie3D(freq_ass_class,
main = 'Pie plot',
col = rainbow(length(freq_ass_class)),
labels = "")
pie3D(freq_ass_class,
main = 'Pie plot',
col = rainbow(length(freq_ass_class)),
labels = "")
pie3D(freq_ass_class,
main = 'Pie plot',
col = rainbow(length(freq_ass_class)),
labels = "",
explode = 0.99)
pie3D(freq_ass_class,
main = 'Pie plot',
col = rainbow(length(freq_ass_class)),
labels = "",
explode = 0,99)
pie3D(freq_ass_class,
main = 'Pie plot',
col = rainbow(length(freq_ass_class)),
labels = "",
explode = 0,99)
legend('topright', cex = 0.8, legend = z, fill = rainbow(length(freq_ass_class)))
pie3D(freq_ass_class,
main = 'Pie plot',
col = rainbow(length(freq_ass_class)),
labels = "",
explode = 0,99)
legend('right', cex = 0.8, legend = z, fill = rainbow(length(freq_ass_class)))
legend('bottom', cex = 0.8, legend = z, fill = rainbow(length(freq_ass_class)))
pie3D(freq_ass_class,
main = 'Pie plot',
col = rainbow(length(freq_ass_class)),
labels = "",
explode = 0,99)
legend('bottom', cex = 0.8, legend = z, fill = rainbow(length(freq_ass_class)))
pie3D(freq_ass_class,
main = 'Pie plot',
col = rainbow(length(freq_ass_class)),
labels = "",
explode = 0,99)
legend(2.0,0.7, cex = 0.8, legend = z, fill = rainbow(length(freq_ass_class)))
pie3D(freq_ass_class,
main = 'Pie plot',
col = rainbow(length(freq_ass_class)),
labels = "",
explode = 0,99)
legend(1.0,0.7, cex = 0.8, legend = z, fill = rainbow(length(freq_ass_class)))
pie3D(freq_ass_class,
main = 'Pie plot',
col = rainbow(length(freq_ass_class)),
labels = "",
explode = 0,99)
legend(1.0,0.7, cex = 0.4, legend = z, fill = rainbow(length(freq_ass_class)))
legend(1.0,0.7, cex = 0.6, legend = z, fill = rainbow(length(freq_ass_class)))
pie3D(freq_ass_class,
main = 'Pie plot',
col = rainbow(length(freq_ass_class)),
labels = "",
explode = 0,99)
legend(1.0,0.7, cex = 0.6, legend = z, fill = rainbow(length(freq_ass_class)))
pie3D(freq_ass_class,
main = 'Pie plot',
col = rainbow(length(freq_ass_class)),
labels = "",
explode = 0,99)
legend(0.5,0.7, cex = 0.6, legend = z, fill = rainbow(length(freq_ass_class)))
pie3D(freq_ass_class,
main = 'Pie plot',
col = rainbow(length(freq_ass_class)),
labels = "",
explode = 0,99)
legend(0.5,0.4, cex = 0.6, legend = z, fill = rainbow(length(freq_ass_class)))
pie3D(freq_ass_class,
main = 'Pie plot',
col = rainbow(length(freq_ass_class)),
labels = "",
explode = 0,99)
legend(0.5,1.0, cex = 0.6, legend = z, fill = rainbow(length(freq_ass_class)))
pie3D(freq_ass_class,
main = 'Pie plot',
col = rainbow(length(freq_ass_class)),
labels = "",
explode = 0,99)
legend(0.5,1.0, cex = 0.7, legend = z, fill = rainbow(length(freq_ass_class)))
pie3D(freq_ass_class,
main = 'Pie plot',
col = rainbow(length(freq_ass_class)),
labels = "",
explode = 0.1)
pie3D(freq_ass_class,
main = 'Pie plot',
col = rainbow(length(freq_ass_class)),
labels = "",
explode = 0,1)
legend(0.5,1.0, cex = 0.7, legend = z, fill = rainbow(length(freq_ass_class)))
pie3D(freq_ass_class,
main = 'Pie plot',
col = rainbow(length(freq_ass_class)),
labels = "",
explode = 0,99)
legend(0.5,1.0, cex = 0.7, legend = z, fill = rainbow(length(freq_ass_class)))
pie3D(freq_ass_class,
main = 'Pie plot',
col = rainbow(length(freq_ass_class)),
labels = "")
pie(freq_ass_class,
main = 'Pie plot',
col = rainbow(length(freq_ass_class)),
labels = "")
legend('topright', cex = 0.8, legend = z, fill = rainbow(length(freq_ass_class)))
pie(freq_ass_class,
main = 'Pie plot',
col = rainbow(length(freq_ass_class)),
labels = "")
legend('topright', cex = 0.9, legend = z, fill = rainbow(length(freq_ass_class)))
pie(freq_ass_class,
main = 'Pie chart',
col = rainbow(length(freq_ass_class)),
labels = "")
legend('topright', cex = 0.9, legend = z, fill = rainbow(length(freq_ass_class)))
legend('topright', cex = 0.9, legend = z, fill = rainbow(length(freq_ass_class)))
library(readxl)
library(tidyverse)
#lettura del file csv
datacqua<-read.csv('acqua.csv',header = TRUE,sep = ',')
datacqua
#selezione delle colonne interessate all'analisi
new_data<-select(datacqua,Territorio,TIPO_DATO4,Value)
new_data
#riposizionamento delle colonne nel modo corretto
finale<-spread(new_data,TIPO_DATO4,Value)
#rimozione Napoli dalla tabella
finale<-filter(finale,Territorio != 'Napoli')
finale
#Frequenza assoluta
freq_ass<-table(finale$ACQ_EROG)
freq_ass
#Frequenza relativa
freq_rel<-freq_ass/sum(freq_ass)
freq_rel
#Frequenza assoluta cumulativa
freq_ass_cum<-cumsum(freq_ass)
freq_ass_cum
#Frequenza relativa cumulativa
freq_rel_cum<-cumsum(freq_rel)
freq_rel_cum
#tabella delle frequenze relative e assolute
tabella<-cbind(freq_ass,freq_rel,freq_ass_cum,freq_rel_cum)
tabella
#mediana
median<-median(finale$ACQ_EROG)
median
#media
mean<-mean(finale$ACQ_EROG)
mean
#moda
mode <- function(v) {
tmp <- unique(v)
tmp[which.max(tabulate(match(v, tmp)))]
}
mode<-mode(finale$ACQ_EROG)
mode
#valore minimo
min<-min(finale$ACQ_EROG)
min
#valore massimo
max<-max(finale$ACQ_EROG)
max
#varianza
var<-sum( {finale$ACQ_EROG - mean}^2 )  / {length(finale$ACQ_EROG)-1}
var
#deviazione standard
sd<-sqrt(var)
sd
#ampiezza del campo di variazione
range_var<-max-min
range_var
#scarto medio assoluto
mean_abs_dev<-sum(abs(finale$ACQ_EROG - mean))  / length(finale$ACQ_EROG)
mean_abs_dev
#coefficiente di variazione
cv<-sd/mean
cv
#indice di asimmetria
y<-sum({finale$ACQ_EROG - mean}^3) /  (length(finale$ACQ_EROG) * {sd}^3)
y
#indice di curtosi
k<-(sum({finale$ACQ_EROG - mean}^4) /  (length(finale$ACQ_EROG) * {sd}^4)) - 3
k
#costante che indica il numero di livelli
K <- 8
K
#dividere il range di dati in livelli equidistanti
delta<-range_var/K
delta
#calcolo degli estremi degli intervalli
xSup <- rep(0 , K)
xInf <- rep(0 , K)
xmin <- min(finale$ACQ_EROG)
for (i in 1:K){
xInf[i]   <-   xmin + {i-1} * delta
xSup[i]   <-   xmin + i * delta
}
Intervalli <- cbind(LimiteInferiore = xInf,    LimiteSuperiore = xSup)
Intervalli<-round(Intervalli)
Intervalli
#vettore degli intervalli per effettuare la divisione
x<-c(92,1415,2738,4060,5383,6706,8028,8351,10675)
z<-c('[92,1415]', '[1415,2738]', '[2738,4060]', '[4060,5383]', '[5383,6706]', '[6706,8028]', '[8028,8351]', '[8351,10675]')
#tabella divisa in classi
tab_classi <- cut(finale$ACQ_EROG, breaks = x,right = FALSE,labels = c('[92,1415]', '[1415,2738]', '[2738,4060]', '[4060,5383]', '[5383,6706]', '[6706,8028]', '[8028,8351]', '[8351,10675]'))
tab_classi
#Frequenze assolute delle classi
freq_ass_class<-table(tab_classi)
freq_ass_class
#Frequenze relative delle classi
freq_rel_class<-freq_ass_class/sum(freq_ass_class)
freq_rel_class
#Frequenze assolute cumulative delle classi
freq_ass_cum_class<-cumsum(freq_ass_class)
freq_ass_cum_class
#Frequenze relative cumulative delle classi
freq_rel_cum_class<-cumsum(freq_rel_class)
freq_rel_cum_class
#tabella delle frequenze assolute e relative per classi
tabella_freq_classi<-cbind(freq_ass_class,freq_rel_class,freq_ass_cum_class,freq_rel_cum_class)
tabella_freq_classi
#grafico a barre per classi
barplot(freq_ass_class,
main = 'Bar plot',
xlab = 'Acqua erogata dai comuni divisa in classi',
ylab = 'Frequenze assolute delle classi')
#grafico ad aste per classi
plot(freq_ass_class,
main = 'Line graph',
xlab = 'Acqua erogata dai comuni divisa in classi',
ylab = 'Frequenze assolute delle classi')
#grafico a linee per classi
plot(freq_ass_class,
main = "Polygon graph",
type = "b",
xlab = "Acqua erogata dai comuni divisa in classi",
ylab = "Frequenze assolute delle classi")
#grafico a torta per classi
pie(freq_ass_class,
main = 'Pie chart',
col = rainbow(length(freq_ass_class)),
labels = "")
legend('topright', cex = 0.9, legend = z, fill = rainbow(length(freq_ass_class)))
#istogramma per classi
hist(finale$ACQ_EROG, main = 'Istogramma',xlab = 'Acqua erogata dai comuni divisa in classi',
ylab = 'densità', breaks = x)
#primo quartile
q1 <- quantile(finale$ACQ_EROG, probs=0.25)
q1
#secondo quartile o mediana
q2 <- quantile(finale$ACQ_EROG, probs=0.5)
q2
#terzo quartile
q3 <- quantile(finale$ACQ_EROG, probs=0.75)
q3
#scarto interquartile
iqr <- q3-q1
iqr <- substr(iqr,1,9)
iqr
ggplot(data = finale, mapping = aes(x=ACQ_EROG))+geom_boxplot()+
labs(title = 'Box Plot', x = 'Acqua erogata dai comuni')
#intervallo per k=1
int1_x<-mean-sd
int1_y<-mean+sd
int1_x
int1_y
#intervallo per k=2
int2_x<-mean-(2*sd)
int2_y<-mean+(2*sd)
int2_x
int2_y
#intervallo per k=3
int3_x<-mean-(3*sd)
int3_y<-mean+(3*sd)
int3_x
int3_y
#diagramma a dispersione, con x_i=ACQ_IMM e y_i = ACQ_EROG
ggplot(data = finale, mapping = aes(x=ACQ_IMM,y=ACQ_EROG))+geom_point()+
labs(title = 'Scatter Plot', y = 'Acqua erogata dai comuni', x = 'Acqua immessa nei comuni')
#coefficiente di correlazione campionario
r<-cor(finale$ACQ_EROG,finale$ACQ_IMM)
r
